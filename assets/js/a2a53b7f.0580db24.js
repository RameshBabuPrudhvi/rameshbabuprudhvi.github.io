"use strict";(self.webpackChunkRameshBabu=self.webpackChunkRameshBabu||[]).push([[841],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(n),b=o,m=d["".concat(p,".").concat(b)]||d[b]||l[b]||s;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2907:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return l}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),i=["components"],a={id:"api-test",title:"Api Test",sidebar_position:4},p=void 0,u={unversionedId:"test/api-test",id:"test/api-test",title:"Api Test",description:"",source:"@site/docs/02_test/api-test.md",sourceDirName:"02_test",slug:"/test/api-test",permalink:"/docs/test/api-test",draft:!1,editUrl:"https://github.com/RameshBabuPrudhvi/rameshbabuprudhvi.github.io/tree/main/docs/02_test/api-test.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"api-test",title:"Api Test",sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Desktop Test",permalink:"/docs/test/desktop-test"},next:{title:"Guide",permalink:"/docs/guides/"}},c={},l=[],d={toc:l};function b(e){var t=e.components,n=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'package org.example;\n\nimport io.github.selcukes.commons.http.Response;\nimport io.github.selcukes.commons.http.WebClient;\nimport lombok.CustomLog;\nimport lombok.SneakyThrows;\nimport org.testng.annotations.Test;\n\n@CustomLog\npublic class WebClientTest {\n\n    @SneakyThrows\n    @Test\n    public void postTest() {\n        StringBuilder json = new StringBuilder();\n        json.append("{");\n        json.append("\\"name\\":\\"Ramesh\\",");\n        json.append("\\"notes\\":\\"hello\\"");\n        json.append("}");\n\n        WebClient client = new WebClient("https://httpbin.org/post");\n        Response response = client.post(json);\n\n        logger.info(response::getBody);\n    }\n\n    @SneakyThrows\n    @Test\n    public void requestTest() {\n\n        WebClient client = new WebClient("https://httpbin.org/get");\n        Response response = client.sendRequest();\n        logger.info(response::getBody);\n    }\n\n    @SneakyThrows\n    @Test\n    public void bearerAuthTest() {\n\n        WebClient client = new WebClient("https://httpbin.org/#/Auth/get_bearer");\n        Response response = client.authenticator("hello")\n                .sendRequest();\n        logger.debug(response::getBody);\n    }\n\n    @SneakyThrows\n    @Test\n    public void authTest() {\n\n        WebClient client = new WebClient("https://httpbin.org/#/Auth/get_basic_auth__user___passwd_");\n        Response response = client.authenticator("hello", "hello")\n                .sendRequest();\n        logger.debug(() -> response.getStatusCode() + "");\n    }\n}\n\n')))}b.isMDXComponent=!0}}]);